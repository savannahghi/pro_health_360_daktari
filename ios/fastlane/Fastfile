# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  before_all do
    setup_travis
  end

  desc :"Code Signing Dev Build for TestFlight"
  lane :dev do 
    match(
      type: "appstore",
      app_identifier: "com.savannah.healthcloud",
      readonly: true
    )

    # App Store Connect API token to authenticate Apple ID
    api_key = app_store_connect_api_key(
      key_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ID"]}",
      issuer_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"]}",
      key_content: "#{ENV["APP_STORE_CONNECT_API_KEY_FUNGUO"]}",
    )

    increment_build_number(
      # Authenticate and increament build number
      build_number: latest_testflight_build_number(
        api_key: api_key) + 1,
      xcodeproj: "Runner.xcodeproj"
    )

    if is_ci
      clear_derived_data
    cocoapods(
      clean_install: true,
    )
    end
    
    if is_ci
      update_code_signing_settings(
        use_automatic_signing: false,
        path: "Runner.xcodeproj",
    )
    end

    build_app(
      scheme: "dev",
      export_options: {
        method: "appstore",
      }
    )

    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: '1501305695',
      distribute_external: true,
      changelog: "Welcome to myCareHub Professional Test. We update the app as often as possible to make it faster and more reliable for you. This update includes bug fixes and improvements.",
    )
  end

  desc :"Code Signing Demo Build for TestFlight"
  lane :demo do 
    match(
      type: "appstore",
      app_identifier: "com.savannah.healthcloud",
      readonly: true
    )

    # App Store Connect API token to authenticate Apple ID
    api_key = app_store_connect_api_key(
      key_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ID"]}",
      issuer_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"]}",
      key_content: "#{ENV["APP_STORE_CONNECT_API_KEY_FUNGUO"]}",
    )

    increment_build_number(
      # Authenticate and increament build number
      build_number: latest_testflight_build_number(
        api_key: api_key) + 1,
      xcodeproj: "Runner.xcodeproj"
    )

    if is_ci
      clear_derived_data
    cocoapods(
      clean_install: true,
    )
    end
    
    if is_ci
      update_code_signing_settings(
        use_automatic_signing: false,
        path: "Runner.xcodeproj",
    )
    end

    build_app(
      scheme: "demo",
      export_options: {
        method: "appstore",
      }
    )

    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: '1501305695',
      distribute_external: true,
      changelog: "Welcome to myCareHub Demo. We update the app as often as possible to make it faster and more reliable for you. This update includes bug fixes and improvements.",
    )
  end


  desc :"Code Sign and Build SIL for App Store"
  lane :prod do
    match(
      type: "appstore",
      app_identifier: "com.savannah.healthcloud",
      readonly: true
    )

    # App Store Connect API token to authenticate Apple ID
    api_key = app_store_connect_api_key(
      key_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ID"]}",
      issuer_id: "#{ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"]}",
      key_content: "#{ENV["APP_STORE_CONNECT_API_KEY_FUNGUO"]}",
    )

    increment_build_number(
      # Authenticate and increament build number
      build_number: latest_testflight_build_number(
        api_key: api_key) + 1,
      xcodeproj: "Runner.xcodeproj"
    )
 
    if is_ci
      clear_derived_data
    cocoapods(
      clean_install: true,
    )
    end

    update_code_signing_settings(
      use_automatic_signing: false,
      path: "Runner.xcodeproj",
    )

    build_app(
      scheme: "prod",
      export_options: {
        method: "appstore",
      }
    )
    
    upload_to_app_store(
      api_key: api_key,
      force: true,
      skip_metadata: true,
      skip_screenshots: true,
      run_precheck_before_submit: false,
    )
  end
end