name: AfyaMoja CI/CD Workflow

on: [push]

jobs:
  run-tests-and-coverage:
    name: Analyze, test and report coverage
    runs-on: ubuntu-latest
    timeout-minutes: 80
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12"
      - uses: actions/setup-python@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          flutter-version: "2.2.3"

      - name: Install flutter dependencies
        run: |
          flutter clean
          flutter pub get

      - name: Analyze and Test
        run: |
          flutter analyze
          flutter test --coverage test/
          sudo apt-get install -y lcov
          lcov --remove coverage/lcov.info 'lib/**/*.g.dart' -o coverage/lcov.info
          lcov --remove coverage/lcov.info 'lib/**/*.freezed.dart' -o coverage/lcov.info
          lcov --remove coverage/lcov.info 'lib/**/*.gr.dart' -o coverage/lcov.info
          lcov --remove coverage/lcov.info 'lib/infrastructure/repository/sqlite.dart' -o coverage/lcov.info
          genhtml -q -o coverage coverage/lcov.info
          pip3 install lxml
          pip3 install beautifulsoup4
          python3 check_coverage.py

  # AppStore ready
  publish-prod-binary-to-app-store:
    name: Publish AfyaMoja Prod binary to TestFlight
    timeout-minutes: 60
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12"

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          flutter-version: "1.20.4"

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Convert secret to gc file
        env:
          GC_KEYS: ${{ secrets.GC_KEYS }}
        run: |
          cd ios
          echo $GC_KEYS > ./gc_keys.json

      - name: Code sign and build prod app
        env:
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD}}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{secrets.APP_STORE_CONNECT_API_KEY_KEY_ID}}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID}}
          APP_STORE_CONNECT_API_KEY_KEY: ${{secrets.APP_STORE_CONNECT_API_KEY_KEY}}
        run: |
          cd ios && bundle install
          bundle exec fastlane deploy
