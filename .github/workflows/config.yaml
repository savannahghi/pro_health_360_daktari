name: ProHealth360 Daktari CI/CD Workflow

on: [push]
jobs:
  publish-demo-binary-to-app-store:
    name: Publish ProHealth360 Daktari Demo binary to TestFlight
    timeout-minutes: 60
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/alpha'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12"

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          flutter-version: "3.0.4"

      - name: Install flutter dependencies
        run: flutter pub get

      - name: Convert secret to gc file
        env:
          GC_KEYS: ${{ secrets.GC_KEYS }}
          ENCODED_APP_ENV: ${{ secrets.ENCODED_APP_ENV }}
          INFO_PLIST_FILE: ${{secrets.INFO_PLIST_FILE}}
          GOOGLE_SERVICE_INFO_PLIST_FILE: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_FILE }}
        run: |
          touch .env
          echo $ENCODED_APP_ENV | base64 --decode > .env
          cd ios
          touch gc_keys.json
          echo $GC_KEYS >> gc_keys.json
          touch Runner/Info.plist
          echo $INFO_PLIST_FILE > Runner/Info.plist
          touch Runner/GoogleService-Info.plist
          echo $GOOGLE_SERVICE_INFO_PLIST_FILE > Runner/GoogleService-Info.plist

      - name: Code sign and build prod app
        env:
          APPLE_API_KEY_ID: ${{secrets.APPLE_API_KEY_ID}}
          APPLE_ISSUER_ID: ${{secrets.APPLE_ISSUER_ID}}
          APPLE_API_KEY_CONTENT: ${{secrets.APPLE_API_KEY_CONTENT}}
        run: |
          cd ios && bundle install
          bundle exec fastlane ios demo

  # AppStore ready
  publish-prod-binary-to-app-store:
    name: Publish ProHealth360 Daktari Prod binary to TestFlight
    timeout-minutes: 60
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/prod'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12"
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          flutter-version: "3.0.4"


      - name: Install flutter dependencies
        run: flutter pub get

      - name: Convert secret to gc file
        env:
          GC_KEYS: ${{ secrets.GC_KEYS }}
          ENCODED_APP_ENV: ${{ secrets.ENCODED_APP_ENV }}
          INFO_PLIST_FILE: ${{secrets.INFO_PLIST_FILE}}
          GOOGLE_SERVICE_INFO_PLIST_FILE: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_FILE }}
        run: |
          touch .env
          echo $ENCODED_APP_ENV | base64 --decode > .env
          cd ios
          touch gc_keys.json
          echo $GC_KEYS >> gc_keys.json
          touch Runner/Info.plist
          echo $INFO_PLIST_FILE > Runner/Info.plist
          touch Runner/GoogleService-Info.plist
          echo $GOOGLE_SERVICE_INFO_PLIST_FILE > Runner/GoogleService-Info.plist

      - name: Code sign and build prod app
        env:
          APPLE_API_KEY_ID: ${{secrets.APPLE_API_KEY_ID}}
          APPLE_ISSUER_ID: ${{secrets.APPLE_ISSUER_ID}}
          APPLE_API_KEY_CONTENT: ${{secrets.APPLE_API_KEY_CONTENT}}
        run: |
          cd ios && bundle install
          bundle exec fastlane ios prod